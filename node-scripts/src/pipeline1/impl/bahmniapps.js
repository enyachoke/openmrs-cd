"use strict";

const fs = require("fs");
const path = require("path");
const _ = require("lodash");
const log = require("npmlog");

const model = require("../../utils/model");
const utils = require("../../utils/utils");

const cmns = require("../commons");

const thisType = "bahmniapps";

module.exports = {
  getInstance: function() {
    var projectBuild = new model.ProjectBuild();

    projectBuild.getBuildScript = function() {
      return getBuildScript();
    };

    projectBuild.getDeployScript = function(artifact) {
      return getDeployScript(artifact);
    };

    projectBuild.getArtifact = function(args) {
      return getArtifact(args.commitMetadata);
    };

    projectBuild.postBuildActions = function(args) {
      cmns.mavenPostBuildActions(
        args.pseudoPom.groupId,
        [args.pseudoPom.artifactId],
        args.pseudoPom.version
      );
    };

    return projectBuild;
  }
};

var getArtifact = function(commitMetadata) {
  var artifact = new model.Artifact();
  artifact.name = "bahmniapps";
  // Bahmni Apps is not version-managed, we infer its version from either the branch name or commit ID.
  if (commitMetadata.branchName) {
    artifact.version = commitMetadata.branchName;
  } else {
    artifact.version = commitMetadata.commitId;
  }
  artifact.buildPath = "./ui/target";
  artifact.extension = "zip";
  artifact.filename = artifact.name + "." + artifact.extension;
  artifact.destFilename = "bahmniapps.zip";

  // encapsulating the Maven project
  var mavenProject = new model.MavenProject();
  mavenProject.groupId = "net.mekomsolutions"; // TODO this should be set through some runtime defaults (Jenkins GP?)
  mavenProject.artifactId = artifact.name;
  mavenProject.version = artifact.version;
  artifact.mavenProject = mavenProject;

  return artifact;
};

var getBuildScript = function() {
  var script = new model.Script();

  script.type = "#!/bin/bash";
  script.headComment =
    "# Autogenerated script to build projects of type '" + thisType + "'...";

  script.body = "cd ./ui\n";
  script.body += "./scripts/package.sh\n";

  return script;
};

var getDeployScript = function(artifact) {
  if (_.isUndefined(artifact)) {
    log.error(
      "",
      "An artifact parameter must be provided to construct the '" +
        thisType +
        "' deploy script."
    );
    throw new Error();
  }

  var script = new model.Script();

  script.type = "#!/bin/bash";
  script.headComment =
    "# Autogenerated script to deploy projects of type '" + thisType + "'...";

  script.body = "nexus_envvars=$1 ; . $nexus_envvars\n";
  script.body +=
    "mvn deploy:deploy-file -DgroupId=net.mekomsolutions -DartifactId=" +
    artifact.name +
    " -Dversion=" +
    artifact.version +
    " -Dpackaging=" +
    artifact.extension +
    " -DrepositoryId=${NEXUS_REPO_ID} -Durl=${ARTIFACT_UPLOAD_URL_" +
    thisType +
    "} -Dfile=" +
    path.join(artifact.buildPath, artifact.destFilename) +
    "\n";

  return script;
};
