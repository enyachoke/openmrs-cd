buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.bmuschko:gradle-docker-plugin:7.4.0"
  }
}

apply plugin: "com.bmuschko.docker-remote-api"

// import task classes
import com.bmuschko.gradle.docker.tasks.image.*

repositories {
  mavenCentral()
}

def dockerHubRepo = "mekomsolutions/openmrscd"
def getShortCommit() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()

}

task buildDockerImage(type: DockerBuildImage) {
  inputDir = file('.')
  images = [dockerHubRepo + ':' + version, dockerHubRepo + ':' + 'latest', dockerHubRepo + ':' + getShortCommit()]
}

task build() {
  dependsOn buildDockerImage
}

//one push per tag:

task pushDockerImages(type: DockerPushImage) {
  images = [dockerHubRepo + ':' + version, dockerHubRepo + ':' + 'latest', dockerHubRepo + ':' + getShortCommit()]
}

task deploy() {
  dependsOn buildDockerImage, pushDockerImages
}