<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Parses HTTP POST payloads posted by GitHub.&#xd;
&#xd;
IMPORTANT: We expect all SCM services to allow the configuration of its webhooks URLs in such a way that custom parameters can be posted alongside the HTTP POST body.&#xd;
For example by appending the expected parameters to a configurable URL, such as &apos;?projectType=openmrsmodule&apos;</description>
  <displayName>GitHub Webhook</displayName>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <inheritanceStrategy class="org.jenkinsci.plugins.matrixauth.inheritance.InheritGlobalStrategy"/>
      <permission>hudson.model.Item.Read:github</permission>
    </hudson.security.AuthorizationMatrixProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <org.jenkinsci.plugins.gwt.GenericTrigger plugin="generic-webhook-trigger@1.44">
      <spec></spec>
      <genericVariables>
        <org.jenkinsci.plugins.gwt.GenericVariable>
          <expressionType>JSONPath</expressionType>
          <key>repoUrl</key>
          <value>$.repository.url</value>
          <regexpFilter></regexpFilter>
          <defaultValue></defaultValue>
        </org.jenkinsci.plugins.gwt.GenericVariable>
        <org.jenkinsci.plugins.gwt.GenericVariable>
          <expressionType>JSONPath</expressionType>
          <key>scmRef</key>
          <value>$.ref</value>
          <regexpFilter></regexpFilter>
          <defaultValue></defaultValue>
        </org.jenkinsci.plugins.gwt.GenericVariable>
        <org.jenkinsci.plugins.gwt.GenericVariable>
          <expressionType>JSONPath</expressionType>
          <key>commitId</key>
          <value>$.head_commit.id</value>
          <regexpFilter></regexpFilter>
          <defaultValue></defaultValue>
        </org.jenkinsci.plugins.gwt.GenericVariable>
        <org.jenkinsci.plugins.gwt.GenericVariable>
          <expressionType>JSONPath</expressionType>
          <key>repoName</key>
          <value>$.repository.name</value>
          <regexpFilter></regexpFilter>
          <defaultValue></defaultValue>
        </org.jenkinsci.plugins.gwt.GenericVariable>
      </genericVariables>
      <regexpFilterText>$repoUrl $scmRef</regexpFilterText>
      <regexpFilterExpression>^https?:\/\/([a-zA-Z\d-]+\.){0,}github\.com (refs/heads/master|refs/heads/main)</regexpFilterExpression>
      <genericRequestVariables>
        <org.jenkinsci.plugins.gwt.GenericRequestVariable>
          <key>projectType</key>
          <regexpFilter></regexpFilter>
        </org.jenkinsci.plugins.gwt.GenericRequestVariable>
      </genericRequestVariables>
      <printPostContent>false</printPostContent>
      <printContributedVariables>false</printContributedVariables>
      <causeString>$repoName - $ref ($commitId)</causeString>
      <token></token>
    </org.jenkinsci.plugins.gwt.GenericTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash&quot;

# The branch name is behind the last slash of the &apos;ref&apos;
branchName=${scmRef##*/}

# Truncating the commit ID to 7 chars
commitId=$(echo $commitId | cut -c1-7)

# Loading the build parameters in a envvars file
cat &lt;&lt;77051b05-4abb-4915-9177-10b0a5b7bca5 &gt;&gt; $BUILD_PATH/commit_metadata.env
projectType=$projectType
repoUrl=$repoUrl
branchName=$branchName
commitId=$commitId
77051b05-4abb-4915-9177-10b0a5b7bca5</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.1.6">
      <info>
        <propertiesFilePath>$JENKINS_HOME/jobs/$JOB_NAME/builds/$BUILD_NUMBER/commit_metadata.env</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <org.jenkinsci.plugins.buildnameupdater.BuildNameUpdater plugin="build-name-setter@1.6.9">
      <buildName>version.txt</buildName>
      <macroTemplate>${ENV,var=&quot;repoName&quot;} - ${ENV,var=&quot;branchName&quot;} (${ENV,var=&quot;commitId&quot;})</macroTemplate>
      <fromFile>false</fromFile>
      <fromMacro>true</fromMacro>
      <macroFirst>false</macroFirst>
    </org.jenkinsci.plugins.buildnameupdater.BuildNameUpdater>
  </builders>
  <publishers>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters>
              <propertiesFile>$BUILD_PATH/commit_metadata.env</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
              <useMatrixChild>false</useMatrixChild>
              <onlyExactRuns>false</onlyExactRuns>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            <hudson.plugins.parameterizedtrigger.BooleanParameters>
              <configs>
                <hudson.plugins.parameterizedtrigger.BooleanParameterConfig>
                  <name>artifactsDeployment</name>
                  <value>true</value>
                </hudson.plugins.parameterizedtrigger.BooleanParameterConfig>
              </configs>
            </hudson.plugins.parameterizedtrigger.BooleanParameters>
          </configs>
          <projects>pipeline1</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers/>
</project>
